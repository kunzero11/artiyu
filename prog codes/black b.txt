string = "BLACK B"
new_string = string.center(50)
print(new_string)
string = "PRIORITY SCHEDULING DYNAMIC\n\n"
new_string = string.center(24)
print(new_string)


#at,bt,wt,tat stands for arrival time, burst time, waiting time, turn around time respectively
  
print("Enter the number of processess: ")
n=int(input())
processes=[]
for i in range(0,n):
 processes.insert(i,i+1)

#Input Arrival time of every process
print("\nEnter the arrival time of the processes: ")
at=list(map(int, input().split()))

#Input Burst time of every process
print("\nEnter the burst time of the processes: ")
bt=list(map(int, input().split()))
 
#Input Priority of every process
print("\nEnter the priority of the processes: ")
priority=list(map(int, input().split()))
tat=[]
wt=[]
 
#Sorting processes burst time, on the basis of their priority
for i in range(0,len(priority)-1):
 for j in range(0,len(priority)-i-1):
  if(priority[j]>priority[j+1]):
   swap=priority[j]
   priority[j]=priority[j+1]
   priority[j+1]=swap
 
   swap=bt[j]
   bt[j]=bt[j+1]
   bt[j+1]=swap
 
   swap=processes[j]
   processes[j]=processes[j+1]
   processes[j+1]=swap
 
wt.insert(0,0)
tat.insert(0,bt[0])
 
#Calculating of waiting time and Turn Around Time of each process
for i in range(1,len(processes)):
 wt.insert(i,wt[i-1]+bt[i-1])
 tat.insert(i,wt[i]+bt[i])
 
#calculating average waiting time and average turn around time
avgtat=0
avgwt=0
for i in range(0,len(processes)):
 avgwt=avgwt+wt[i]
 avgtat=avgtat+tat[i]
avgwt=float(avgwt)/n
avgwt=float(avgtat)/n
print("\n")
print("Process\t Arrival Time\t Burst Time\t  Waiting Time\t  Turn Around Time")
for i in range(0,n):
 print(str(processes[i])+"\t\t"+str(at[i])+"\t\t"+str(bt[i])+"\t\t"+str(wt[i])+"\t\t"+str(tat[i])+"\t\t")
 print("\n")
print("Average Waiting time is: "+str(avgwt))
print("Average Turn Around Time is: "+str(avgtat))


-----------------------------

from tkinter import *
 
root = Tk()
root.geometry('700x450')

root.title("BLACK B")

lbl = Label(root, text="Priority Scheduling (Pre-emptive)", font=("Nyala", 20))
lbl.config(anchor=CENTER)
lbl.grid(column=0, row=0)
 
root.mainloop()

